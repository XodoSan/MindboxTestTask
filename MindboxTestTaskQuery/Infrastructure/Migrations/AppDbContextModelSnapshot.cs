// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MindboxTestTaskQuery.Infrastructure;

#nullable disable

namespace MindboxTestTaskQuery.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MindboxTestTaskQuery.Domain.DirtModels.DirtCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("DirtCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Name = "Computer peripherals",
                            ProductId = 4
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            Name = "Computer peripherals",
                            ProductId = 2
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            Name = "Computer peripherals",
                            ProductId = 3
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 2,
                            Name = "TV's",
                            ProductId = 2
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 2,
                            Name = "TV's",
                            ProductId = 3
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 3,
                            Name = "Laptops"
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 4,
                            Name = "Softwares"
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 5,
                            Name = "Phones",
                            ProductId = 1
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 5,
                            Name = "Phones",
                            ProductId = 2
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 5,
                            Name = "Phones",
                            ProductId = 3
                        });
                });

            modelBuilder.Entity("MindboxTestTaskQuery.Domain.DirtModels.DirtProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("DirtProducts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 5,
                            Name = "Apple",
                            ProductId = 1
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 5,
                            Name = "Samsung",
                            ProductId = 2
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 5,
                            Name = "Xiaomi",
                            ProductId = 3
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 1,
                            Name = "Logitech",
                            ProductId = 4
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 1,
                            Name = "Samsung",
                            ProductId = 2
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 1,
                            Name = "Xiaomi",
                            ProductId = 3
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 2,
                            Name = "Samsung",
                            ProductId = 2
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 2,
                            Name = "Xiaomi",
                            ProductId = 3
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 4,
                            Name = "Microsoft",
                            ProductId = 5
                        },
                        new
                        {
                            Id = 10,
                            Name = "Coffee",
                            ProductId = 6
                        },
                        new
                        {
                            Id = 11,
                            Name = "Cookies",
                            ProductId = 7
                        });
                });

            modelBuilder.Entity("MindboxTestTaskQuery.Domain.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Computer peripherals"
                        },
                        new
                        {
                            Id = 2,
                            Name = "TV's"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Laptops"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Softwares"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Phones"
                        });
                });

            modelBuilder.Entity("MindboxTestTaskQuery.Domain.Models.CategoryProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ProductId");

                    b.ToTable("CategoryProduct");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ProductId = 6
                        },
                        new
                        {
                            Id = 2,
                            ProductId = 7
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 5,
                            ProductId = 1
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 5,
                            ProductId = 2
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 1,
                            ProductId = 2
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 2,
                            ProductId = 2
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 3,
                            ProductId = 2
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 1,
                            ProductId = 3
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 2,
                            ProductId = 3
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 3,
                            ProductId = 3
                        },
                        new
                        {
                            Id = 11,
                            CategoryId = 1,
                            ProductId = 4
                        },
                        new
                        {
                            Id = 12,
                            CategoryId = 4,
                            ProductId = 5
                        });
                });

            modelBuilder.Entity("MindboxTestTaskQuery.Domain.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Apple"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Samsung"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Xiaomi"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Logitech"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Microsoft"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Coffee"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Cookies"
                        });
                });

            modelBuilder.Entity("MindboxTestTaskQuery.Domain.Models.CategoryProduct", b =>
                {
                    b.HasOne("MindboxTestTaskQuery.Domain.Models.Category", "Category")
                        .WithMany("CategoryProducts")
                        .HasForeignKey("CategoryId");

                    b.HasOne("MindboxTestTaskQuery.Domain.Models.Product", "Product")
                        .WithMany("CategoryProducts")
                        .HasForeignKey("ProductId");

                    b.Navigation("Category");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("MindboxTestTaskQuery.Domain.Models.Category", b =>
                {
                    b.Navigation("CategoryProducts");
                });

            modelBuilder.Entity("MindboxTestTaskQuery.Domain.Models.Product", b =>
                {
                    b.Navigation("CategoryProducts");
                });
#pragma warning restore 612, 618
        }
    }
}
